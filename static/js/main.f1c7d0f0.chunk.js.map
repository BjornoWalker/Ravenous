{"version":3,"sources":["components/SearchBar/SearchBar.js","components/Business/Business.js","components/BusinessList/BusinessList.js","util/Yelp.js","App.js","serviceWorker.js","index.js"],"names":["sortByOptions","Best Match","Highest Rated","Most Reviewed","SearchBar","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","term","location","sortBy","handleTermChange","bind","assertThisInitialized","handleLocationChange","handleSearch","sortByOption","setState","event","target","value","searchYelp","preventDefault","_this2","keys","map","sortByOptionValue","react_default","a","createElement","key","className","getSortByClass","onClick","handleSortByChange","renderSortByOptions","placeholder","onChange","href","React","Component","Business","business","src","imageSrc","alt","name","address","city","zipCode","category","rating","reviewCount","BusinessList","businesses","components_Business_Business","id","Yelp","fetch","concat","headers","Authorization","then","response","json","jsonResponse","console","log","image_url","address1","zip_code","categories","title","review_count","App","components_SearchBar_SearchBar","components_BusinessList_BusinessList","Boolean","window","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"4TAGMA,eAAgB,CACrBC,aAAkB,aAClBC,gBAAkB,SAClBC,gBAAkB,iBA8EJC,cA1Ed,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IAClBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KAEDQ,MAAQ,CACZC,KAAW,GACXC,SAAW,GACXC,OAAW,cAGZV,EAAKW,iBAAmBX,EAAKW,iBAAiBC,KAAtBX,OAAAY,EAAA,EAAAZ,CAAAD,IACxBA,EAAKc,qBAAuBd,EAAKc,qBAAqBF,KAA1BX,OAAAY,EAAA,EAAAZ,CAAAD,IAC5BA,EAAKe,aAAef,EAAKe,aAAaH,KAAlBX,OAAAY,EAAA,EAAAZ,CAAAD,IAXFA,8EAcJgB,GACd,OAAIA,IAAiBb,KAAKI,MAAMG,OACxB,SAEA,8CAIUM,GAClBb,KAAKc,SAAS,CAAEP,OAAQM,6CAGRE,GAChBf,KAAKc,SAAS,CAAET,KAAMU,EAAMC,OAAOC,qDAGfF,GACpBf,KAAKc,SAAS,CAAER,SAAUS,EAAMC,OAAOC,6CAG3BF,GACZf,KAAKJ,MAAMsB,WAAWlB,KAAKI,MAAMC,KAAML,KAAKI,MAAME,SAAUN,KAAKI,MAAMG,QACvEQ,EAAMI,+DAGe,IAAAC,EAAApB,KACrB,OAAOF,OAAOuB,KAAK9B,GAAe+B,IAAI,SAACT,GACtC,IAAIU,EAAoBhC,EAAcsB,GACtC,OACCW,EAAAC,EAAAC,cAAA,MACCC,IAAKJ,EACLK,UAAWR,EAAKS,eAAeN,GAC/BO,QAASV,EAAKW,mBAAmBtB,KAAKW,EAAMG,IAE3CV,sCAOJ,OACCW,EAAAC,EAAAC,cAAA,OAAKE,UAAU,aACdJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,0BACdJ,EAAAC,EAAAC,cAAA,UAAK1B,KAAKgC,wBAEXR,EAAAC,EAAAC,cAAA,OAAKE,UAAU,oBACdJ,EAAAC,EAAAC,cAAA,SAAOO,YAAY,oBAAoBC,SAAUlC,KAAKQ,mBACtDgB,EAAAC,EAAAC,cAAA,SAAOO,YAAY,SAASC,SAAUlC,KAAKW,wBAE5Ca,EAAAC,EAAAC,cAAA,OAAKE,UAAU,oBACdJ,EAAAC,EAAAC,cAAA,KAAGS,KAAK,YAAYL,QAAS9B,KAAKY,cAAlC,qBAlEmBwB,IAAMC,WCsBfC,gMA3BL,IACAC,EAAavC,KAAKJ,MAAlB2C,SACR,OACCf,EAAAC,EAAAC,cAAA,OAAKE,UAAU,YACdJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,mBACdJ,EAAAC,EAAAC,cAAA,OAAKc,IAAKxC,KAAKJ,MAAM2C,SAASE,SAAUC,IAAI,MAE7ClB,EAAAC,EAAAC,cAAA,UAAKa,EAASI,MACdnB,EAAAC,EAAAC,cAAA,OAAKE,UAAU,wBACdJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,oBACdJ,EAAAC,EAAAC,cAAA,SAAIa,EAASK,SACbpB,EAAAC,EAAAC,cAAA,SAAIa,EAASM,MACbrB,EAAAC,EAAAC,cAAA,SACEa,EAASnC,MADX,IACmBmC,EAASO,UAG7BtB,EAAAC,EAAAC,cAAA,OAAKE,UAAU,oBACdJ,EAAAC,EAAAC,cAAA,UAAKa,EAASQ,UACdvB,EAAAC,EAAAC,cAAA,MAAIE,UAAU,UAAUW,EAASS,QACjCxB,EAAAC,EAAAC,cAAA,SAAIa,EAASU,uBApBIb,IAAMC,YCada,mLAVb,OACC1B,EAAAC,EAAAC,cAAA,OAAKE,UAAU,gBACb5B,KAAKJ,MAAMuD,WAAW7B,IAAI,SAACiB,GAC3B,OAAOf,EAAAC,EAAAC,cAAC0B,EAAD,CAAUzB,IAAKY,EAASc,GAAId,SAAUA,cALvBH,IAAMC,WC8BlBiB,EA/BF,CACZpC,WADY,SACDb,EAAMC,EAAUC,GAC1B,OAAOgD,MAAK,sFAAAC,OAC2EnD,EAD3E,cAAAmD,OAC4FlD,EAD5F,aAAAkD,OACgHjD,GAC3H,CAAEkD,QAAS,CAAEC,cAAa,UAAAF,OAN5B,uIAQGG,KAAK,SAACC,GACN,OAAOA,EAASC,SAEhBF,KAAK,SAACG,GACN,GAAIA,EAAaX,WAChB,OAAOW,EAAaX,WAAW7B,IAAI,SAACiB,GAEnC,OADAwB,QAAQC,IAAIzB,GACL,CACNc,GAAcd,EAASc,GACvBZ,SAAcF,EAAS0B,UACvBtB,KAAcJ,EAASI,KACvBC,QAAcL,EAASjC,SAAS4D,SAChCrB,KAAcN,EAASjC,SAASuC,KAChCzC,MAAcmC,EAASjC,SAASF,MAChC0C,QAAcP,EAASjC,SAAS6D,SAChCpB,SAAcR,EAAS6B,WAAW,GAAGC,MACrCrB,OAAcT,EAASS,OACvBC,YAAcV,EAAS+B,oBCQfC,cA3Bd,SAAAA,EAAY3E,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAuE,IAClB1E,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAyE,GAAApE,KAAAH,KAAMJ,KAEDQ,MAAQ,CACZ+C,WAAa,IAGdtD,EAAKqB,WAAarB,EAAKqB,WAAWT,KAAhBX,OAAAY,EAAA,EAAAZ,CAAAD,IAPAA,0EAURQ,EAAMC,EAAUC,GAAQ,IAAAa,EAAApB,KAClCsD,EAAKpC,WAAWb,EAAMC,EAAUC,GAAQoD,KAAK,SAACR,GAC7C/B,EAAKN,SAAS,CAAEqC,WAAYA,uCAK7B,OACC3B,EAAAC,EAAAC,cAAA,OAAKE,UAAU,OACdJ,EAAAC,EAAAC,cAAA,sBACCF,EAAAC,EAAAC,cAAC8C,EAAD,CAAWtD,WAAYlB,KAAKkB,aAC5BM,EAAAC,EAAAC,cAAC+C,EAAD,CAActB,WAAYnD,KAAKI,MAAM+C,qBAtBxBf,IAAMC,WCMJqC,QACW,cAA7BC,OAAOrE,SAASsE,UAEe,UAA7BD,OAAOrE,SAASsE,UAEhBD,OAAOrE,SAASsE,SAASC,MACvB,2DCZNC,IAASC,OAAOvD,EAAAC,EAAAC,cAACsD,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM1B,KAAK,SAAA2B,GACjCA,EAAaC","file":"static/js/main.f1c7d0f0.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./SearchBar.css\";\n\nconst sortByOptions = {\n\t\"Best Match\"    : \"best_match\",\n\t\"Highest Rated\" : \"rating\",\n\t\"Most Reviewed\" : \"review_count\"\n};\n\nclass SearchBar extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tterm     : \"\",\n\t\t\tlocation : \"\",\n\t\t\tsortBy   : \"best_match\"\n\t\t};\n\n\t\tthis.handleTermChange = this.handleTermChange.bind(this);\n\t\tthis.handleLocationChange = this.handleLocationChange.bind(this);\n\t\tthis.handleSearch = this.handleSearch.bind(this);\n\t}\n\n\tgetSortByClass(sortByOption) {\n\t\tif (sortByOption === this.state.sortBy) {\n\t\t\treturn \"active\";\n\t\t} else {\n\t\t\treturn \"\";\n\t\t}\n\t}\n\n\thandleSortByChange(sortByOption) {\n\t\tthis.setState({ sortBy: sortByOption });\n\t}\n\n\thandleTermChange(event) {\n\t\tthis.setState({ term: event.target.value });\n\t}\n\n\thandleLocationChange(event) {\n\t\tthis.setState({ location: event.target.value });\n\t}\n\n\thandleSearch(event) {\n\t\tthis.props.searchYelp(this.state.term, this.state.location, this.state.sortBy);\n\t\tevent.preventDefault();\n\t}\n\n\trenderSortByOptions() {\n\t\treturn Object.keys(sortByOptions).map((sortByOption) => {\n\t\t\tlet sortByOptionValue = sortByOptions[sortByOption];\n\t\t\treturn (\n\t\t\t\t<li\n\t\t\t\t\tkey={sortByOptionValue}\n\t\t\t\t\tclassName={this.getSortByClass(sortByOptionValue)}\n\t\t\t\t\tonClick={this.handleSortByChange.bind(this, sortByOptionValue)}\n\t\t\t\t>\n\t\t\t\t\t{sortByOption}\n\t\t\t\t</li>\n\t\t\t);\n\t\t});\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"SearchBar\">\n\t\t\t\t<div className=\"SearchBar-sort-options\">\n\t\t\t\t\t<ul>{this.renderSortByOptions()}</ul>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"SearchBar-fields\">\n\t\t\t\t\t<input placeholder=\"Search Businesses\" onChange={this.handleTermChange} />\n\t\t\t\t\t<input placeholder=\"Where?\" onChange={this.handleLocationChange} />\n\t\t\t\t</div>\n\t\t\t\t<div className=\"SearchBar-submit\">\n\t\t\t\t\t<a href=\"www.#.com\" onClick={this.handleSearch}>\n\t\t\t\t\t\tLet's Go\n\t\t\t\t\t</a>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default SearchBar;\n","import React from \"react\";\nimport \"./Business.css\";\n\nclass Business extends React.Component {\n\trender() {\n\t\tconst { business } = this.props;\n\t\treturn (\n\t\t\t<div className=\"Business\">\n\t\t\t\t<div className=\"image-container\">\n\t\t\t\t\t<img src={this.props.business.imageSrc} alt=\"\" />\n\t\t\t\t</div>\n\t\t\t\t<h2>{business.name}</h2>\n\t\t\t\t<div className=\"Business-information\">\n\t\t\t\t\t<div className=\"Business-address\">\n\t\t\t\t\t\t<p>{business.address}</p>\n\t\t\t\t\t\t<p>{business.city}</p>\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t{business.state} {business.zipCode}\n\t\t\t\t\t\t</p>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"Business-reviews\">\n\t\t\t\t\t\t<h3>{business.category}</h3>\n\t\t\t\t\t\t<h3 className=\"rating\">{business.rating}</h3>\n\t\t\t\t\t\t<p>{business.reviewCount}</p>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Business;\n","import React from \"react\";\nimport \"./BusinessList.css\";\nimport Business from \"../Business/Business\";\n\nclass BusinessList extends React.Component {\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"BusinessList\">\n\t\t\t\t{this.props.businesses.map((business) => {\n\t\t\t\t\treturn <Business key={business.id} business={business} />;\n\t\t\t\t})}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default BusinessList;\n","const apiKey =\n\t\"2_XOs_-q5kmZCanPOH9wmXR-2y1Yr1QDJQSEq-7jjwyRrzFShnyle4ITxTpASy7T1TuNB2l2JUpPEX3OTji3OQm4IBfkbaP92o1fL8QV6FMLzZx3TkIjaxOhFwslXXYx\";\n\nconst Yelp = {\n\tsearchYelp(term, location, sortBy) {\n\t\treturn fetch(\n\t\t\t`https://cors-anywhere.herokuapp.com/https://api.yelp.com/v3/businesses/search?term=${term}&location=${location}&sort_by=${sortBy}`,\n\t\t\t{ headers: { Authorization: `Bearer ${apiKey}` } }\n\t\t)\n\t\t\t.then((response) => {\n\t\t\t\treturn response.json();\n\t\t\t})\n\t\t\t.then((jsonResponse) => {\n\t\t\t\tif (jsonResponse.businesses) {\n\t\t\t\t\treturn jsonResponse.businesses.map((business) => {\n\t\t\t\t\t\tconsole.log(business);\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\tid          : business.id,\n\t\t\t\t\t\t\timageSrc    : business.image_url,\n\t\t\t\t\t\t\tname        : business.name,\n\t\t\t\t\t\t\taddress     : business.location.address1,\n\t\t\t\t\t\t\tcity        : business.location.city,\n\t\t\t\t\t\t\tstate       : business.location.state,\n\t\t\t\t\t\t\tzipCode     : business.location.zip_code,\n\t\t\t\t\t\t\tcategory    : business.categories[0].title,\n\t\t\t\t\t\t\trating      : business.rating,\n\t\t\t\t\t\t\treviewCount : business.review_count\n\t\t\t\t\t\t};\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t}\n};\n\nexport default Yelp;\n","import React from \"react\";\nimport \"./App.css\";\nimport SearchBar from \"./components/SearchBar/SearchBar\";\nimport BusinessList from \"./components/BusinessList/BusinessList\";\nimport Yelp from \"./util/Yelp\";\n\nclass App extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tbusinesses : []\n\t\t};\n\n\t\tthis.searchYelp = this.searchYelp.bind(this);\n\t}\n\n\tsearchYelp(term, location, sortBy) {\n\t\tYelp.searchYelp(term, location, sortBy).then((businesses) => {\n\t\t\tthis.setState({ businesses: businesses });\n\t\t});\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t<h1>Ravenous</h1>\n\t\t\t\t{<SearchBar searchYelp={this.searchYelp} />}\n\t\t\t\t{<BusinessList businesses={this.state.businesses} />}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}